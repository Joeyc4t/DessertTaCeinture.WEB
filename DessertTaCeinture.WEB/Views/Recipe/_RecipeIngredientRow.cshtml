
@model DessertTaCeinture.WEB.Models.Recipe_Ingredients.Recipe_IngredientViewModel

@{
    List<SelectListItem> ingredients = new List<SelectListItem>();
    foreach (var ingredient in Model.Ingredients) { ingredients.Add(new SelectListItem { Text = ingredient.Name, Value = ingredient.Id.ToString() }); }

    List<SelectListItem> units = new List<SelectListItem>();
    units.Add(new SelectListItem { Text = "mg", Value = "mg" });
    units.Add(new SelectListItem { Text = "g", Value = "g" });
    units.Add(new SelectListItem { Text = "kg", Value = "kg" });
    units.Add(new SelectListItem { Text = "ml", Value = "ml" });
    units.Add(new SelectListItem { Text = "cl", Value = "cl" });
    units.Add(new SelectListItem { Text = "l", Value = "l" });
}

<script type="text/javascript">
    function disallowNegativeNumber(e) {
        var charCode = (e.which) ? e.which : event.keyCode
        if (charCode == 45) {
            return false;
        }
        return true;
    }
</script>

<div class="form-group">
    <div class="col-md-3 col-md-offset-2">
        @Html.DropDownListFor(model => model.RecipeIngredient.IngredientId, ingredients, string.Empty, htmlAttributes: new { @class = "form-control", id = "selectedIngredient" })
    </div>
    <div class="col-md-2">
        @Html.EditorFor(model => model.RecipeIngredient.Quantity, new { htmlAttributes = new { @class = "form-control", min=0, max=9999, onkeypress="return disallowNegativeNumber(event)" } })
    </div>
    <div class="col-md-3">
        @Html.DropDownListFor(model => model.RecipeIngredient.Unit, units, string.Empty, htmlAttributes: new { @class = "form-control", id = "selectedUnit" })
    </div>
</div>
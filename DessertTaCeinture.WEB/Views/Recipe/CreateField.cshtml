@using DessertTaCeinture.WEB.Services

@model DessertTaCeinture.WEB.Models.Recipe_Ingredients.Recipe_IngredientModel

@{
    List<SelectListItem> ingredients = new List<SelectListItem>();
    foreach (var ingredient in Recipe.Instance.GetIngredients()) { ingredients.Add(new SelectListItem { Text = ingredient.Name, Value = ingredient.Id.ToString() }); }

    List<SelectListItem> units = new List<SelectListItem>();
    units.Add(new SelectListItem { Text = "mg", Value = "mg" });
    units.Add(new SelectListItem { Text = "g", Value = "g" });
    units.Add(new SelectListItem { Text = "kg", Value = "kg" });
    units.Add(new SelectListItem { Text = "ml", Value = "ml" });
    units.Add(new SelectListItem { Text = "cl", Value = "cl" });
    units.Add(new SelectListItem { Text = "l", Value = "l" });
}

<div class="form-group">
    <div class="col-md-3 col-md-offset-2">
        @Html.DropDownListFor(model => model.IngredientId, ingredients, string.Empty, htmlAttributes: new { @class = "form-control", id = Model.Index + "-selectedIngredient" })
    </div>
    <div class="col-md-2">
        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", min = 0, max = 9999, onkeypress = "return disallowNegativeNumber(event)" } })
    </div>
    <div class="col-md-3">
        @Html.DropDownListFor(model => model.Unit, units, string.Empty, htmlAttributes: new { @class = "form-control", id = Model.Index + "-selectedUnit" })
    </div>
</div>

@model DessertTaCeinture.WEB.Models.Recipe.CreateRecipeModel

@{
    ViewBag.Title = "Nouvelle recette";
    Layout = "~/Views/Shared/_Layout.cshtml";

    List<SelectListItem> share = new List<SelectListItem>();
    share.Add(new SelectListItem { Text = "Oui", Value = true.ToString() });
    share.Add(new SelectListItem { Text = "Non", Value = false.ToString() });
}
@using (Html.BeginForm("Create", "Recipe", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
@Html.AntiForgeryToken()
<div class="gtco-loader"></div>
<div id="page">
    <header id="gtco-header" class="gtco-cover gtco-cover-md" role="banner" style="background-image: url(../../Content/images/backgrounds/img_bg_3.jpg)" data-stellar-background-ratio="0.5">
        <div class="overlay"></div>
        <div class="gtco-container">
            <div class="row">
                <div class="col-md-12">
                    <div class="row row-mt-15em">
                        <div class="col-md-12 animate-box">
                            <div class="form-wrap">
                                <div class="tab">
                                    <div class="tab-content">
                                        @Html.AntiForgeryToken()
                                        <div class="form-horizontal">
                                            <h3 class="cursive-font">Nouvelles recettes</h3>
                                            <hr />
                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-8">
                                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.OriginId, "Origine", htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-8">
                                                    @Html.DropDownList("Origin", null, string.Empty, htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.OriginId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.CategoryId, "Catégorie", htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-8">
                                                    @Html.DropDownList("Category", null, string.Empty, htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.ThemeId, "Thématique", htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-8">
                                                    @Html.DropDownList("Theme", null, string.Empty, htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.ThemeId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.IsPublic, "Publier", htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-8">
                                                    @Html.DropDownListFor(model => model.IsPublic, share, htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.IsPublic, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <div class="gtco-section">
        <div class="gtco-container">
            <div class="row">
                <div class="col-md-8 col-md-offset-2 text-center gtco-heading">
                    <h2 class="cursive-font primary-color">Ingrédients</h2>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    @Html.Partial("_AddIngredient")
                </div>
            </div>
        </div>

        <div class="gtco-container">
            <div class="col-md-4 col-md-offset-2">
                <input type="submit" class="btn btn-primary btn-block" value="Enregistrer">
            </div>
            <div class="col-md-4 col-md-offset-2">
                <p>@Html.ActionLink("Annuler", "Details", "User")</p>
            </div>
        </div>
    </div>
</div>
}
